// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String
  password  String?
  phone     String?
  address   String?
  latitude  Decimal?
  longitude Decimal?
  avatarId  String?  @map("avatar_id")
  createdAt DateTime @default(now()) @map("created_at")
  updateAt  DateTime @updatedAt @map("updated_at")

  avatar     File?        @relation(fields: [avatarId], references: [id])
  restaurant Restaurant[]

  @@map("users")
}

enum StorageType {
  LOCAL
  GOOGLE
}

model File {
  id           String      @id @default(uuid())
  filename     String      @unique
  originalname String
  storageType  StorageType @default(LOCAL) @map("storage_type")

  createdAt   DateTime     @default(now()) @map("created_at")
  updateAt    DateTime     @updatedAt @map("updated_at")
  users       User[]
  restaurants Restaurant[]
  MenuItem    MenuItem[]

  @@map("files")
}

model Restaurant {
  id          String  @id @default(uuid())
  name        String
  description String?
  address     String?
  latitude    Decimal @db.Decimal(9, 6)
  longitude   Decimal @db.Decimal(9, 6)
  openTime    String  @map("open_time")
  closeTime   String  @map("close_time")
  slogan      String
  phone       String
  email       String  @unique
  createdBy   String  @map("created_by")
  imageId     String? @map("image_id")

  createdAt DateTime @default(now()) @map("created_at")
  updateAt  DateTime @updatedAt @map("updated_at")

  creator   User       @relation(fields: [createdBy], references: [id])
  image     File?      @relation(fields: [imageId], references: [id])
  menuItems MenuItem[]

  @@map("restaurants")
}

model MenuItem {
  id           String  @id @default(uuid())
  name         String
  description  String?
  price        Float
  prepareTime  String  @map("prepare_time")
  imageId      String? @map("image_id")
  restaurantId String  @map("restaurant_id")

  createdAt DateTime @default(now()) @map("created_at")
  updateAt  DateTime @updatedAt @map("updated_at")

  restaurant  Restaurant           @relation(fields: [restaurantId], references: [id])
  image       File?                @relation(fields: [imageId], references: [id])
  ingredients MenuItemIngredient[]

  @@map("menu_items")
}

model Ingredient {
  id   String @id @default(uuid())
  name String @unique

  createdAt DateTime             @default(now()) @map("created_at")
  updateAt  DateTime             @updatedAt @map("updated_at")
  menuItems MenuItemIngredient[]

  @@map("ingredients")
}

model MenuItemIngredient {
  ingredientId String     @map("ingredient_id")
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
  menuItemId   String     @map("menu_item_id")
  menuItem     MenuItem   @relation(fields: [menuItemId], references: [id])

  @@id([ingredientId, menuItemId])
  @@map("menu_items_ingredients")
}
